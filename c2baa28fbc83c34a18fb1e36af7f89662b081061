{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "87efcb1e_a5554fd0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 20
      },
      "lineNbr": 18,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2022-11-10T00:32:14Z",
      "side": 1,
      "message": "I\u0027d rather you demonstrate what testing was done rather than just asserting that some undefined testing was done.",
      "range": {
        "startLine": 18,
        "startChar": 9,
        "endLine": 18,
        "endChar": 60
      },
      "revId": "c2baa28fbc83c34a18fb1e36af7f89662b081061",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5dfc279d_93c841c6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 20
      },
      "lineNbr": 18,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-11-14T07:45:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "87efcb1e_a5554fd0",
      "range": {
        "startLine": 18,
        "startChar": 9,
        "endLine": 18,
        "endChar": 60
      },
      "revId": "c2baa28fbc83c34a18fb1e36af7f89662b081061",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7ce56c34_c47c879d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 20
      },
      "lineNbr": 0,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2022-11-10T00:32:14Z",
      "side": 1,
      "message": "Hi Jayashree, the series is starting to come together. A couple of comments.",
      "revId": "c2baa28fbc83c34a18fb1e36af7f89662b081061",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "560ccb1c_375a77c4",
        "filename": "controller.cpp",
        "patchSetId": 20
      },
      "lineNbr": 112,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2022-11-10T00:32:14Z",
      "side": 1,
      "message": "I don\u0027t think this is actually exposing anything on DBus?",
      "revId": "c2baa28fbc83c34a18fb1e36af7f89662b081061",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c8a8975b_09b82e93",
        "filename": "controller.cpp",
        "patchSetId": 20
      },
      "lineNbr": 112,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-11-14T07:45:49Z",
      "side": 1,
      "message": "This patch is to invoke the dbus method for each LED udev event. In the further patches, changes to expose dbus path will be submitted.",
      "parentUuid": "560ccb1c_375a77c4",
      "revId": "c2baa28fbc83c34a18fb1e36af7f89662b081061",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84176193_b31c2def",
        "filename": "controller.cpp",
        "patchSetId": 20
      },
      "lineNbr": 112,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2022-11-14T23:27:02Z",
      "side": 1,
      "message": "Right, but there\u0027s no reason to add this code unless it exposes the LED on DBus. \n\nBroadly, and within a codebase, patches should be created in terms of vertical feature slices. If the patch becomes complex using that approach, the problem should be decomposed into a tree of subproblems that need to be solved, and the patches should be ordered such that the leaf problems are solved first: Specifically, a post-order tree-traversal. Using this technique the general solution emerges from the composition of solutions to the subproblems such that the final patch glues the everything together and exposes the feature atomically.\n\nhttps://twitter.com/axboe/status/1591538174077317126\n\nThe feature in this case is the internal DBus interface for notifying the daemon of a new LED. By the ordering I\u0027ve just outlined above, the DBus interface should be added in the final patch if there is more than one patch required to do so. As it stands the patch here exposes the internal interface on DBus but invoking its methods has no useful effect. As a maintainer this leads to a poor experience for me because it is harder to reason about external callers and intent and therefore harder to delete the code in the event that the remaining required patches are never merged.\n\nIf the code is dead *internal* to the codebase then it\u0027s much easier to discover, reason about and delete.",
      "parentUuid": "c8a8975b_09b82e93",
      "revId": "c2baa28fbc83c34a18fb1e36af7f89662b081061",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49331d66_14e3be9b",
        "filename": "controller.cpp",
        "patchSetId": 20
      },
      "lineNbr": 112,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2022-11-14T23:32:58Z",
      "side": 1,
      "message": "\u003e If the code is dead *internal* to the codebase then it\u0027s much easier to discover, reason about and delete.\n\nI missed the final piece: The impact to you is that it\u0027s much easier for me to say yes to your patches if they\u0027re structured this way :)",
      "parentUuid": "84176193_b31c2def",
      "revId": "c2baa28fbc83c34a18fb1e36af7f89662b081061",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35126f35_5d62127b",
        "filename": "controller.cpp",
        "patchSetId": 20
      },
      "lineNbr": 112,
      "author": {
        "id": 1000869
      },
      "writtenOn": "2022-11-16T11:33:51Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "49331d66_14e3be9b",
      "revId": "c2baa28fbc83c34a18fb1e36af7f89662b081061",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}