{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "82a75d7e_e12ee143",
        "filename": "test/physical.cpp",
        "patchSetId": 3
      },
      "lineNbr": 41,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-02-07T18:24:59Z",
      "side": 1,
      "message": "I\u0027m partially surprised by clang-tidy recommending this particular syntax, but I guess if it works go with it.\n\nfs::path(foo) and fs::path({foo}) are potentially two different constructors.  The second one takes an initializer_list.\n\nTelling developers to prefer {} seems to be, as a habit, inhibiting them from thinking about which constructor they are intending to call and sometimes inadvertently shooting themselves in the foot.\n\nstd::vector\u003csize_t\u003e is the prototypical case where `std::vector({len, val})` and `std::vector(len, val)` have drastically different meanings and using `return {len, val}` leads to the first and not the second.\n\nI\u0027m probably not smarter than the authors of clang-tidy though...",
      "revId": "5be59e387d32dc646430cc24b8f81c40778416db",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "20db0c78_38d279be",
        "filename": "test/physical.cpp",
        "patchSetId": 3
      },
      "lineNbr": 41,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2023-02-07T23:20:58Z",
      "side": 1,
      "message": "Do you prefer we go with the original code with `// NOLINTNEXTLINE(modernize-return-braced-init-list)`?",
      "parentUuid": "82a75d7e_e12ee143",
      "revId": "5be59e387d32dc646430cc24b8f81c40778416db",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3b11ec9_df39a8bd",
        "filename": "test/physical.cpp",
        "patchSetId": 3
      },
      "lineNbr": 41,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-02-08T00:08:52Z",
      "side": 1,
      "message": "Personally, I\u0027d just use `return dir`.  It seems to compile.\n\nI guess I\u0027m not necessarily on the same page as whoever wrote modernize-return-brace-init-list and I\u0027d probably not enable it in clang-tidy.  I am not in favor of NOLINT lines to the extent possible to avoid them.\n\nIn this case either `return dir` or `return {dir}` do the same thing.  I think it is error prone for the linter to always suggest `{}` syntax because it can have a different meaning than the implicit type conversion and I suspect many developers would just start writing `{ return_values }` without thinking about the implications.  That seems more error inducing than an extra type specifier.",
      "parentUuid": "20db0c78_38d279be",
      "revId": "5be59e387d32dc646430cc24b8f81c40778416db",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f8777ee1_a72ff954",
        "filename": "test/physical.cpp",
        "patchSetId": 3
      },
      "lineNbr": 41,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2023-02-08T00:40:45Z",
      "side": 1,
      "message": "Okay, `return dir` it is.",
      "parentUuid": "f3b11ec9_df39a8bd",
      "revId": "5be59e387d32dc646430cc24b8f81c40778416db",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}